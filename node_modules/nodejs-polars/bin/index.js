"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.pl = exports.Expr = exports.TimeUnit = exports.Field = exports.DataType = void 0;
const series = __importStar(require("./series"));
const df = __importStar(require("./dataframe"));
const datatypes_1 = require("./datatypes");
const func = __importStar(require("./functions"));
const io = __importStar(require("./io"));
const cfg = __importStar(require("./cfg"));
const ldf = __importStar(require("./lazy/dataframe"));
const polars_internal_1 = __importDefault(require("./internals/polars_internal"));
var datatypes_2 = require("./datatypes");
Object.defineProperty(exports, "DataType", { enumerable: true, get: function () { return datatypes_2.DataType; } });
Object.defineProperty(exports, "Field", { enumerable: true, get: function () { return datatypes_2.Field; } });
Object.defineProperty(exports, "TimeUnit", { enumerable: true, get: function () { return datatypes_2.TimeUnit; } });
__exportStar(require("./series"), exports);
var expr_1 = require("./lazy/expr");
Object.defineProperty(exports, "Expr", { enumerable: true, get: function () { return expr_1.Expr; } });
__exportStar(require("./dataframe"), exports);
__exportStar(require("./functions"), exports);
__exportStar(require("./io"), exports);
__exportStar(require("./cfg"), exports);
__exportStar(require("./lazy/dataframe"), exports);
__exportStar(require("./lazy"), exports);
const lazy = __importStar(require("./lazy"));
__exportStar(require("./types"), exports);
var pl;
(function (pl) {
    pl.Expr = lazy.Expr;
    pl.DataFrame = df.DataFrame;
    pl.LazyDataFrame = ldf.LazyDataFrame;
    pl.Series = series.Series;
    pl.Config = cfg.Config;
    pl.Int8 = datatypes_1.DataType.Int8;
    pl.Int16 = datatypes_1.DataType.Int16;
    pl.Int32 = datatypes_1.DataType.Int32;
    pl.Int64 = datatypes_1.DataType.Int64;
    pl.UInt8 = datatypes_1.DataType.UInt8;
    pl.UInt16 = datatypes_1.DataType.UInt16;
    pl.UInt32 = datatypes_1.DataType.UInt32;
    pl.UInt64 = datatypes_1.DataType.UInt64;
    pl.Float32 = datatypes_1.DataType.Float32;
    pl.Float64 = datatypes_1.DataType.Float64;
    pl.Bool = datatypes_1.DataType.Bool;
    pl.Utf8 = datatypes_1.DataType.Utf8;
    pl.List = datatypes_1.DataType.List;
    // biome-ignore lint/suspicious/noShadowRestrictedNames: pl.Date
    pl.Date = datatypes_1.DataType.Date;
    pl.Datetime = datatypes_1.DataType.Datetime;
    pl.Time = datatypes_1.DataType.Time;
    // biome-ignore lint/suspicious/noShadowRestrictedNames: pl.Object
    pl.Object = datatypes_1.DataType.Object;
    pl.Null = datatypes_1.DataType.Null;
    pl.Struct = datatypes_1.DataType.Struct;
    pl.Categorical = datatypes_1.DataType.Categorical;
    pl.Field = datatypes_1.Field;
    pl.repeat = func.repeat;
    pl.concat = func.concat;
    // IO
    pl.scanCSV = io.scanCSV;
    pl.scanJson = io.scanJson;
    pl.scanIPC = io.scanIPC;
    pl.scanParquet = io.scanParquet;
    pl.readRecords = io.readRecords;
    pl.readCSV = io.readCSV;
    pl.readIPC = io.readIPC;
    pl.readJSON = io.readJSON;
    pl.readParquet = io.readParquet;
    pl.readAvro = io.readAvro;
    pl.readCSVStream = io.readCSVStream;
    pl.readJSONStream = io.readJSONStream;
    // lazy
    pl.col = lazy.col;
    pl.cols = lazy.cols;
    pl.lit = lazy.lit;
    pl.intRange = lazy.intRange;
    pl.intRanges = lazy.intRanges;
    pl.argSortBy = lazy.argSortBy;
    pl.avg = lazy.avg;
    pl.concatList = lazy.concatList;
    pl.concatString = lazy.concatString;
    pl.count = lazy.count;
    pl.cov = lazy.cov;
    pl.exclude = lazy.exclude;
    pl.element = lazy.element;
    pl.first = lazy.first;
    pl.format = lazy.format;
    pl.groups = lazy.groups;
    pl.head = lazy.head;
    pl.last = lazy.last;
    pl.mean = lazy.mean;
    pl.median = lazy.median;
    pl.nUnique = lazy.nUnique;
    pl.pearsonCorr = lazy.pearsonCorr;
    pl.quantile = lazy.quantile;
    pl.select = lazy.select;
    pl.struct = lazy.struct;
    pl.allHorizontal = lazy.allHorizontal;
    pl.anyHorizontal = lazy.anyHorizontal;
    pl.minHorizontal = lazy.minHorizontal;
    pl.maxHorizontal = lazy.maxHorizontal;
    pl.sumHorizontal = lazy.sumHorizontal;
    pl.spearmanRankCorr = lazy.spearmanRankCorr;
    pl.tail = lazy.tail;
    pl.list = lazy.list;
    pl.when = lazy.when;
    pl.version = polars_internal_1.default.version();
})(pl || (exports.pl = pl = {}));
// eslint-disable-next-line no-undef
exports.default = pl;
